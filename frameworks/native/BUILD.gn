# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_effect/config.gni")

config("image_effect_impl_public_config") {
  include_dirs = [
    "$image_effect_root_dir/interfaces/inner_api/native",
    "$image_effect_root_dir/interfaces/inner_api/native/base",
    "$image_effect_root_dir/interfaces/inner_api/native/common",
    "$image_effect_root_dir/interfaces/inner_api/native/custom",
    "$image_effect_root_dir/interfaces/inner_api/native/effect",
    "$image_effect_root_dir/interfaces/inner_api/native/efilter",
    "$image_effect_root_dir/interfaces/inner_api/native/memory",
    "$image_effect_root_dir/interfaces/inner_api/native/utils",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/include/core",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/include/factory",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/include/filters/sink",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/include/filters/source",
    "$image_effect_root_dir/frameworks/native/effect/base",
    "$image_effect_root_dir/frameworks/native/efilter/base",
    "$image_effect_root_dir/frameworks/native/utils/dfx",
    "//foundation/multimedia/media_foundation/engine/include",
  ]

  defines = [ "HST_ANY_WITH_NO_RTTI" ]
}

ohos_shared_library("image_effect_impl") {
  sanitize = image_effect_sanitize

  stack_protector_ret = true

  public_configs = [ ":image_effect_impl_public_config" ]

  include_dirs = [
    "$image_effect_root_dir/frameworks/native/effect/render_environment/gpu_render",
    "$image_effect_root_dir/frameworks/native/effect/render_environment/utils",
    "$image_effect_root_dir/frameworks/native/efilter/custom",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/brightness",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/contrast",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/crop",
    "$image_effect_root_dir/frameworks/native/utils/common",
    "//third_party/skia/third_party/externals/oboe/samples/RhythmGame/third_party",
    "//drivers/peripheral/display/interfaces/include",
  ]

  sources = [
    "$image_effect_root_dir/frameworks/native/effect/base/effect.cpp",
    "$image_effect_root_dir/frameworks/native/effect/base/effect_surface_adapter.cpp",
    "$image_effect_root_dir/frameworks/native/effect/base/external_loader.cpp",
    "$image_effect_root_dir/frameworks/native/effect/base/image_effect_inner.cpp",
    "$image_effect_root_dir/frameworks/native/effect/manager/memory_manager/effect_memory.cpp",
    "$image_effect_root_dir/frameworks/native/effect/manager/memory_manager/effect_memory_manager.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/core/capability_negotiate.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/core/filter_base.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/core/pipeline_core.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/core/port.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/factory/filter_factory.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/filters/sink/image_sink_filter.cpp",
    "$image_effect_root_dir/frameworks/native/effect/pipeline/filters/source/image_source_filter.cpp",
    "$image_effect_root_dir/frameworks/native/effect/render_environment/gpu_render/IMRenderAttribute.cpp",
    "$image_effect_root_dir/frameworks/native/effect/render_environment/gpu_render/IMRenderContext.cpp",
    "$image_effect_root_dir/frameworks/native/effect/render_environment/gpu_render/IMRenderSurface.cpp",
    "$image_effect_root_dir/frameworks/native/effect/render_environment/utils/GLUtils.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/base/efilter.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/base/efilter_base.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/base/efilter_factory.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/base/render_strategy.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/custom/custom_efilter.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/brightness/brightness_efilter.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/brightness/cpu_brightness_algo.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/brightness/gpu_brightness_algo.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/contrast/contrast_efilter.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/contrast/cpu_contrast_algo.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/contrast/gpu_contrast_algo.cpp",
    "$image_effect_root_dir/frameworks/native/efilter/filterimpl/crop/crop_efilter.cpp",
    "$image_effect_root_dir/frameworks/native/utils/common/common_utils.cpp",
    "$image_effect_root_dir/frameworks/native/utils/common/json_helper.cpp",
    "$image_effect_root_dir/frameworks/native/utils/common/memcpy_helper.cpp",
    "$image_effect_root_dir/frameworks/native/utils/common/string_helper.cpp",
    "$image_effect_root_dir/frameworks/native/utils/dfx/error_code.cpp",
    "$image_effect_root_dir/frameworks/native/utils/format/format_helper.cpp",
  ]

  use_exceptions = true

  external_deps = [
    "ability_base:zuri",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "graphic_2d:libgl",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "json:nlohmann_json_static",
    "napi:ace_napi",
  ]

  cflags_cc = [
    "-ffunction-sections",
    "-fdata-sections",
    "-fno-rtti",
    "-Os",
  ]

  ldflags = [ "-Wl,--gc-sections" ]

  output_extension = "so"
  subsystem_name = "multimedia"
  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  part_name = "image_effect"
}

config("image_effect_ndk_public_config") {
  include_dirs = [ "$image_effect_root_dir/interfaces/kits/native" ]
}

ohos_shared_library("image_effect") {
  sanitize = image_effect_sanitize

  stack_protector_ret = true

  public_configs = [ ":image_effect_ndk_public_config" ]

  include_dirs = [
    "$image_effect_root_dir/frameworks/native/capi",
    "$image_effect_root_dir/frameworks/native/utils/common",
  ]

  sources = [
    "$image_effect_root_dir/frameworks/native/capi/image_effect.cpp",
    "$image_effect_root_dir/frameworks/native/capi/image_effect_filter.cpp",
    "$image_effect_root_dir/frameworks/native/capi/native_common_utils.cpp",
  ]

  use_exceptions = true

  deps = [ ":image_effect_impl" ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "hilog:libhilog",
    "image_framework:image_native",
    "image_framework:pixelmap",
    "json:nlohmann_json_static",
    "napi:ace_napi",
  ]

  cflags_cc = [
    "-ffunction-sections",
    "-fdata-sections",
    "-fno-rtti",
    "-Os",
  ]

  ldflags = [ "-Wl,--gc-sections" ]

  output_extension = "so"
  subsystem_name = "multimedia"
  innerapi_tags = [ "ndk" ]
  part_name = "image_effect"
}
