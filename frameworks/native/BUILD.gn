# Copyright (C) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_effect/config.gni")

config("image_effect_public_config") {
    include_dirs = [
        "$image_effect_root_dir/interfaces/inner_api/native",
        "$image_effect_root_dir/interfaces/inner_api/native/base",
        "$image_effect_root_dir/interfaces/inner_api/native/common",
        "$image_effect_root_dir/interfaces/inner_api/native/custom_efilter",
        "$image_effect_root_dir/interfaces/inner_api/native/effect",
        "$image_effect_root_dir/interfaces/inner_api/native/efilter",
        "$image_effect_root_dir/interfaces/inner_api/native/factory",
        "$image_effect_root_dir/interfaces/inner_api/native/memory",
        "$image_effect_root_dir/interfaces/inner_api/native/utils",
        "$image_effect_root_dir/frameworks/native/pipeline/include/core",
        "$image_effect_root_dir/frameworks/native/pipeline/include/factory",
        "$image_effect_root_dir/frameworks/native/pipeline/include/filters/efilter",
        "$image_effect_root_dir/frameworks/native/pipeline/include/filters/sink",
        "$image_effect_root_dir/frameworks/native/pipeline/include/filters/source",
        "$image_effect_root_dir/frameworks/native/common_effect/negotiate",
        "$image_effect_root_dir/frameworks/native/common_effect/strategy",
        "//foundation/multimedia/media_foundation/engine/include"
    ]
}

ohos_shared_library("image_effect") {
    public_configs = [
        ":image_effect_public_config",
    ]

    include_dirs = [
        "$image_effect_root_dir/frameworks/native/utils",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/base",
        "$image_effect_root_dir/frameworks/native/common_effect/common",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/custom_efilter/include",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/color_efilter/include",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/shape_efilter/include",
        "$image_effect_root_dir/frameworks/native/filter_operator/base",
        "$image_effect_root_dir/frameworks/native/common_effect/effect/include",
        "$image_effect_root_dir/frameworks/native/common_effect/factory",
        "$image_effect_root_dir/frameworks/native/filter_operator/gpu/include",
        "$image_effect_root_dir/frameworks/native/filter_operator/cpu/include",
        "$image_effect_root_dir/frameworks/native/filter_operator/common",
        "$image_effect_root_dir/frameworks/native/common_effect/engine/utils",
        "$image_effect_root_dir/frameworks/native/common_effect/engine/gpu_render",
        "$image_effect_root_dir/frameworks/native/common_effect/receiver",
        "$image_effect_root_dir/frameworks/native/common_effect/memory/include",
        "$image_effect_root_dir/frameworks/native",
        "$image_effect_root_dir/interfaces/kits/native/include",
        "//third_party/json/single_include",
        "//third_party/skia/third_party/externals/oboe/samples/RhythmGame/third_party",
        "//foundation/graphic/graphic_2d/frameworks/surface/include",
        "//foundation/multimedia/image_framework/interfaces/innerkits/include",
        "//drivers/peripheral/display/interfaces/include"
    ]

    sources = [
        "$image_effect_root_dir/frameworks/native/common_effect/common/error_code.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/base/efilter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/color_efilter/src/color_efilter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/effect/src/effect.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/effect/src/image_effect.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/factory/efilter_factory.cpp",
        "$image_effect_root_dir/frameworks/native/filter_operator/base/filter_operator_factory.cpp",
        "$image_effect_root_dir/frameworks/native/filter_operator/cpu/src/cpu_brightness_filter_operator.cpp",
        "$image_effect_root_dir/frameworks/native/filter_operator/cpu/src/cpu_contrast_filter_operator.cpp",
        "$image_effect_root_dir/frameworks/native/filter_operator/gpu/src/gpu_brightness_filter_operator.cpp",
        "$image_effect_root_dir/frameworks/native/filter_operator/gpu/src/gpu_contrast_filter_operator.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/color_efilter/src/brightness_efilter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/color_efilter/src/contrast_efilter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/custom_efilter/src/custom_efilter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/common/common_utils.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/common/json_helper.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/common/string_helper.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/common/external_loader.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/common/memcpy_helper.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/common/format_helper.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/engine/utils/GLUtils.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/engine/gpu_render/IMRenderAttribute.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/engine/gpu_render/IMRenderContext.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/engine/gpu_render/IMRenderSurface.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/core/filter_base.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/core/pipeline_core.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/core/port.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/factory/filter_factory.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/filters/efilter/efilter_base.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/filters/sink/image_sink_filter.cpp",
        "$image_effect_root_dir/frameworks/native/pipeline/filters/source/image_source_filter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/receiver/image_effect_receiver.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/shape_efilter/src/crop_efilter.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/memory/src/memory_manager.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/memory/src/effect_memory.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/memory/src/effect_memory_manager.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/negotiate/capability_negotiate.cpp",
        "$image_effect_root_dir/frameworks/native/common_effect/strategy/effect_render_strategy.cpp",
    ]

    defines = [
        "HST_ANY_WITH_NO_RTTI",
    ]

    use_exceptions = true

    external_deps = [
        "napi:ace_napi",
        "hilog:libhilog",
        "image_framework:image_native",
        "hitrace:hitrace_meter",
        "graphic_2d:librender_service_client",
        "graphic_surface:surface",
        "graphic_2d:libgl",
        "c_utils:utils",
        "ability_base:zuri"
    ]

    deps = [
        "//third_party/bounds_checking_function:libsec_shared",
    ]

    output_extension = "so"
    subsystem_name = "multimedia"
    innerapi_tags = [
        "platformsdk",
        "sasdk"
    ]
    part_name = "image_effect"
}

ohos_shared_library("image_effect_ndk") {
    include_dirs = [
        "$image_effect_root_dir/frameworks/native/utils",
        "$image_effect_root_dir/interfaces/kits/native/include",
        "$image_effect_root_dir/interfaces/inner_api/native/base",
        "$image_effect_root_dir/interfaces/inner_api/native/common",
        "$image_effect_root_dir/interfaces/inner_api/native/custom_efilter",
        "$image_effect_root_dir/interfaces/inner_api/native/effect",
        "$image_effect_root_dir/interfaces/inner_api/native/efilter",
        "$image_effect_root_dir/interfaces/inner_api/native/factory",
        "$image_effect_root_dir/frameworks/native/common_effect/efilter/custom_efilter/include",
        "$image_effect_root_dir/frameworks/native/common_effect/base",
        "$image_effect_root_dir/frameworks/native/common_effect/common",
        "$image_effect_root_dir/frameworks/native/common_effect/receiver",
        "$image_effect_root_dir/frameworks/native",
        "$image_effect_root_dir/interfaces/kits/native/include",
        "//foundation/multimedia/image_framework/interfaces/innerkits/include/mdkKits",
        "//foundation/graphic/graphic_2d/frameworks/surface/include",
        "//foundation/multimedia/media_foundation/engine/include"
    ]

    sources = [
        "$image_effect_root_dir/frameworks/native/native_efilter.cpp",
        "$image_effect_root_dir/frameworks/native/native_image_effect.cpp",
        "$image_effect_root_dir/frameworks/native/native_common_utils.cpp",
    ]

    defines = [
        "HST_ANY_WITH_NO_RTTI",
    ]

    use_exceptions = true

    deps = [
        ":image_effect",
    ]

    external_deps = [
        "napi:ace_napi",
        "hilog:libhilog",
        "image_framework:image_native",
        "image_framework:pixelmap_ndk",
        "image_framework:image",
        "graphic_2d:librender_service_client",
        "graphic_surface:surface",
        "c_utils:utils",
    ]

    output_extension = "so"
    subsystem_name = "multimedia"
    innerapi_tags = [ "ndk" ]
    part_name = "image_effect"
}